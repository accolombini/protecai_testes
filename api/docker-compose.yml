# ProtecAI - Docker Compose Completo
# ==================================

version: '3.8'

services:
  # PostgreSQL Database
  postgres-protecai:
    image: postgres:16-alpine
    container_name: postgres-protecai
    environment:
      POSTGRES_DB: protecai_db
      POSTGRES_USER: protecai
      POSTGRES_PASSWORD: protecai
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../docs/SCHEMA_CONFIGURACOES_RELES_CORRETO.sql:/docker-entrypoint-initdb.d/01-schema.sql
    ports:
      - "5432:5432"
    networks:
      - protecai_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U protecai -d protecai_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Adminer (Database Admin)
  adminer-protecai:
    image: adminer:4-standalone
    container_name: adminer-protecai
    ports:
      - "8080:8080"
    networks:
      - protecai_network
    depends_on:
      - postgres-protecai
    environment:
      ADMINER_DEFAULT_SERVER: postgres-protecai

  # ProtecAI API
  protecai-api:
    build:
      context: ..
      dockerfile: Dockerfile
    container_name: protecai-api
    environment:
      POSTGRES_SERVER: postgres-protecai
      POSTGRES_USER: protecai
      POSTGRES_PASSWORD: protecai
      POSTGRES_DB: protecai_db
      POSTGRES_PORT: 5432
    ports:
      - "8000:8000"
    volumes:
      - ../outputs:/app/outputs
      - ../inputs:/app/inputs
    networks:
      - protecai_network
    depends_on:
      postgres-protecai:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
    driver: local

networks:
  protecai_network:
    driver: bridge