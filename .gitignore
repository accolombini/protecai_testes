# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# VS Code
.vscode/
*.code-workspace

# macOS
.DS_Store
.AppleDouble
.LSOverride

# Icon must end with two \r
Icon

# Thumbnails
._*

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# PostgreSQL Data Directory - CRITICAL!
docker/postgres/data/
docker/postgres/logs/

# Docker volumes and generated files
*.pid
*.opts

# Temporary and backup files
*~
*.tmp
*.temp
*.bak
*.backup
*#

# Office temporary files
~$*
*.tmp
~$*.docx
~$*.xlsx
~$*.pptx
*.lnk

# Backup files
*_backup.*
*_old.*
*_temp.*

# Project specific outputs that should not be tracked
outputs/logs/
# EXCEÇÃO: Manter logs organizacionais importantes (movidos da raiz)
!outputs/logs/*.log
outputs/logs_backup_*/
outputs/norm_csv/
outputs/norm_excel/
outputs/csv/
outputs/atrib_limpos/
outputs/excel/

# Outputs temporários de teste (gerados pelos scripts)
outputs/etap_exports/study_test_study_*.csv
outputs/ml_data/
outputs/ml_results/test_*

# Input files - should not be tracked in production
inputs/pdf/
inputs/txt/
inputs/xlsx/
inputs/csv/
inputs/glossario/

# Temporary folder for incoming data processing (mas manter arquivos importantes)
temp/*.json
temp/*_test_results_*.json
# Manter scripts e auditorias importantes em temp/

# Generated documentation with timestamps
outputs/doc/*_2025*.xlsx
outputs/doc/*_2025*.docx

# Arquivos de contexto - MANTER SEMPRE (são fundamentais para continuidade)
# AUDITORIA_MOCK_FAKE.md - MANTER
# CONTEXTO_PROTECAI.md - MANTER

# Registry backups
inputs/registry/*_backup_*.json

# Frontend development files (untracked components)
frontend/protecai-frontend/src/components/APIIntegrationDashboard.tsx
frontend/protecai-frontend/src/components/FileUploadProcessor.tsx
frontend/protecai-frontend/src/components/RealFileUpload.tsx
frontend/protecai-frontend/src/components/SimpleAPITest.tsx
frontend/protecai-frontend/src/components/SimpleUpload.tsx

# Docker infrastructure (development only)
docker/

# Documentation drafts and revisions
outputs/doc/MODELAGEM_DADOS_REVISADA.txt
outputs/doc/MODELAGEM_DADOS.docx

# Project management and directive documents
Direcionadores_PROTECAI.docx

# SQL documentation files (keep only final versions)
docs/
# EXCEÇÃO: Manter docs de status organizacionais
!docs/status/

# ================================
# NOVOS PATTERNS - ORGANIZAÇÃO 27/OUT/2025  
# ================================

# Arquivos temporários de snapshot e auditoria (raiz do projeto)
SNAPSHOT_*.json
smart_post_test_results_*.json
test_file.txt
importacao_dados.log

# Resultados de testes temporários (mas manter scripts e auditorias importantes)
temp/test_results/*.json
temp/*_test_results_*.json
temp/endpoint_test_results_*.json
temp/real_64_endpoints_test_*.json

# PERMITIR arquivos importantes do temp:
# !temp/test_real_64_endpoints.py
# !temp/AUDITORIA_ENDPOINTS_FANTASMA.md

# ================================
# ARQUIVOS DE CONTROLE E MONITORAMENTO  
# ================================
# Arquivos .md de controle do desenvolvimento (apenas temporários)
CORRECAO_ENDPOINTS_*.md
SITUACAO_CRITICA_*.md

# MANTER arquivos de status finais importantes:
# STATUS_FINAL_ENDPOINTS_*.md - são importantes para histórico!
# Arquivos .md de controle do desenvolvimento (interessam apenas aos desenvolvedores)
CORRECAO_ENDPOINTS_*.md
SITUACAO_CRITICA_*.md
STATUS_ENDPOINTS_*.md
# STATUS_FINAL_ENDPOINTS_*.md - MANTIDOS (são importantes para histórico!)
AUDITORIA_MOCK_FAKE.md
AUDITORIA_ENDPOINTS_FANTASMA.md

# Resultados de testes de endpoints (arquivos temporários)
endpoint_progress_test_*.json
smart_post_test_results_*.json
*_test_results_*.json
real_64_endpoints_test_*.json
endpoint_test_results_*.json

# Scripts de teste temporários
test_all_70_endpoints.py
test_real_64_endpoints.py

# Logs de importação temporários
importacao_dados.log
*.log

# Arquivos temporários de teste
test_file.txt

# Arquivos temporários do Office
~$*.docx
~$*.xlsx
~$*.pptx